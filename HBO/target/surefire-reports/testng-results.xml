<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="5" ignored="0" total="32" passed="26">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/shahnazpervin/Desktop/ekhtiar/Robin(HBO)/WebAutomationHBO2019/HBO/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite name="HBO Automation Script" duration-ms="141215" started-at="2019-01-26T03:40:31Z" finished-at="2019-01-26T03:42:52Z">
    <groups>
    </groups>
    <test name="Search" duration-ms="141215" started-at="2019-01-26T03:40:31Z" finished-at="2019-01-26T03:42:52Z">
      <class name="testHomePage.TestMainPage">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="extentSetup" is-config="true" duration-ms="150" started-at="2019-01-26T03:40:30Z" finished-at="2019-01-26T03:40:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6f1b8544]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/shahnazpervin/Desktop/ekhtiar/Robin(HBO)/WebAutomationHBO2019/HBO/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2516" started-at="2019-01-26T03:40:31Z" finished-at="2019-01-26T03:40:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="5" started-at="2019-01-26T03:40:33Z" finished-at="2019-01-26T03:40:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.MovieTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="27" started-at="2019-01-26T03:40:33Z" finished-at="2019-01-26T03:40:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="FAIL" signature="MovieTitle()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="MovieTitle" duration-ms="1438" started-at="2019-01-26T03:40:33Z" finished-at="2019-01-26T03:40:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HBO Original Movies & Films: watch Online | HBO Official Site] but found [HBO Original Movies & Films: Watch Online | HBO Official Site]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HBO Original Movies & Films: watch Online | HBO Official Site] but found [HBO Original Movies & Films: Watch Online | HBO Official Site]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at homePage.MainPage.getMovieTitle(MainPage.java:136)
at testHomePage.TestMainPage.MovieTitle(TestMainPage.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MovieTitle -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="1526" started-at="2019-01-26T03:40:35Z" finished-at="2019-01-26T03:40:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MovieTitle status=FAILURE method=TestMainPage.MovieTitle()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:36Z" finished-at="2019-01-26T03:40:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2057" started-at="2019-01-26T03:40:36Z" finished-at="2019-01-26T03:40:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:38Z" finished-at="2019-01-26T03:40:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.checkMovies()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="2" started-at="2019-01-26T03:40:38Z" finished-at="2019-01-26T03:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="checkMovies()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="checkMovies" duration-ms="1231" started-at="2019-01-26T03:40:38Z" finished-at="2019-01-26T03:40:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMovies -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="148" started-at="2019-01-26T03:40:39Z" finished-at="2019-01-26T03:40:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMovies status=SUCCESS method=TestMainPage.checkMovies()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1924" started-at="2019-01-26T03:40:39Z" finished-at="2019-01-26T03:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:39Z" finished-at="2019-01-26T03:40:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:41Z" finished-at="2019-01-26T03:40:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:41Z" finished-at="2019-01-26T03:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.checkSpecials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="checkSpecials()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="checkSpecials" duration-ms="904" started-at="2019-01-26T03:40:41Z" finished-at="2019-01-26T03:40:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSpecials -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="129" started-at="2019-01-26T03:40:42Z" finished-at="2019-01-26T03:40:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSpecials status=SUCCESS method=TestMainPage.checkSpecials()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:42Z" finished-at="2019-01-26T03:40:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1969" started-at="2019-01-26T03:40:42Z" finished-at="2019-01-26T03:40:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:44Z" finished-at="2019-01-26T03:40:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.dropDownHandle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="2" started-at="2019-01-26T03:40:44Z" finished-at="2019-01-26T03:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="dropDownHandle()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="dropDownHandle" duration-ms="3824" started-at="2019-01-26T03:40:44Z" finished-at="2019-01-26T03:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownHandle -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="148" started-at="2019-01-26T03:40:48Z" finished-at="2019-01-26T03:40:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropDownHandle status=SUCCESS method=TestMainPage.dropDownHandle()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2078" started-at="2019-01-26T03:40:48Z" finished-at="2019-01-26T03:40:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:48Z" finished-at="2019-01-26T03:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:50Z" finished-at="2019-01-26T03:40:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.findepisodes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:50Z" finished-at="2019-01-26T03:40:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="findepisodes()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="findepisodes" duration-ms="984" started-at="2019-01-26T03:40:50Z" finished-at="2019-01-26T03:40:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findepisodes -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="137" started-at="2019-01-26T03:40:51Z" finished-at="2019-01-26T03:40:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=findepisodes status=SUCCESS method=TestMainPage.findepisodes()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2072" started-at="2019-01-26T03:40:52Z" finished-at="2019-01-26T03:40:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:52Z" finished-at="2019-01-26T03:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:54Z" finished-at="2019-01-26T03:40:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getAbout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:54Z" finished-at="2019-01-26T03:40:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getAbout()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getAbout" duration-ms="1359" started-at="2019-01-26T03:40:54Z" finished-at="2019-01-26T03:40:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAbout -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="129" started-at="2019-01-26T03:40:55Z" finished-at="2019-01-26T03:40:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAbout status=SUCCESS method=TestMainPage.getAbout()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:55Z" finished-at="2019-01-26T03:40:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2010" started-at="2019-01-26T03:40:55Z" finished-at="2019-01-26T03:40:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:40:57Z" finished-at="2019-01-26T03:40:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getAdChoices()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:57Z" finished-at="2019-01-26T03:40:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getAdChoices()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getAdChoices" duration-ms="688" started-at="2019-01-26T03:40:57Z" finished-at="2019-01-26T03:40:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdChoices -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="103" started-at="2019-01-26T03:40:58Z" finished-at="2019-01-26T03:40:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAdChoices status=SUCCESS method=TestMainPage.getAdChoices()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1977" started-at="2019-01-26T03:40:58Z" finished-at="2019-01-26T03:41:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:40:58Z" finished-at="2019-01-26T03:40:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="4" started-at="2019-01-26T03:41:00Z" finished-at="2019-01-26T03:41:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:00Z" finished-at="2019-01-26T03:41:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getAllMovOrder() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getAllMovOrder()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getAllMovOrder" duration-ms="3134" started-at="2019-01-26T03:41:00Z" finished-at="2019-01-26T03:41:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMovOrder -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="135" started-at="2019-01-26T03:41:03Z" finished-at="2019-01-26T03:41:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllMovOrder status=SUCCESS method=TestMainPage.getAllMovOrder()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:03Z" finished-at="2019-01-26T03:41:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2035" started-at="2019-01-26T03:41:03Z" finished-at="2019-01-26T03:41:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:05Z" finished-at="2019-01-26T03:41:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:05Z" finished-at="2019-01-26T03:41:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getAssert()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getAssert()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getAssert" duration-ms="819" started-at="2019-01-26T03:41:05Z" finished-at="2019-01-26T03:41:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAssert -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="111" started-at="2019-01-26T03:41:06Z" finished-at="2019-01-26T03:41:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAssert status=SUCCESS method=TestMainPage.getAssert()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:06Z" finished-at="2019-01-26T03:41:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2046" started-at="2019-01-26T03:41:06Z" finished-at="2019-01-26T03:41:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:08Z" finished-at="2019-01-26T03:41:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getCareerFrHbo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:08Z" finished-at="2019-01-26T03:41:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getCareerFrHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getCareerFrHbo" duration-ms="912" started-at="2019-01-26T03:41:08Z" finished-at="2019-01-26T03:41:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCareerFrHbo -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="162" started-at="2019-01-26T03:41:09Z" finished-at="2019-01-26T03:41:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCareerFrHbo status=SUCCESS method=TestMainPage.getCareerFrHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:09Z" finished-at="2019-01-26T03:41:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2015" started-at="2019-01-26T03:41:09Z" finished-at="2019-01-26T03:41:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:11Z" finished-at="2019-01-26T03:41:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getFacebook() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="2" started-at="2019-01-26T03:41:11Z" finished-at="2019-01-26T03:41:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="FAIL" signature="getFacebook()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getFacebook" duration-ms="20342" started-at="2019-01-26T03:41:11Z" finished-at="2019-01-26T03:41:32Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"loginbutton"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:52897}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 19c678da8de6168ea7fb3ea723981642
*** Element info: {Using=id, value=loginbutton}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"loginbutton"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:52897}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 19c678da8de6168ea7fb3ea723981642
*** Element info: {Using=id, value=loginbutton}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:368)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.click(Unknown Source)
at homePage.MainPage.findFaceBook(MainPage.java:142)
at testHomePage.TestMainPage.getFacebook(TestMainPage.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFacebook -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="609" started-at="2019-01-26T03:41:32Z" finished-at="2019-01-26T03:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getFacebook status=FAILURE method=TestMainPage.getFacebook()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:32Z" finished-at="2019-01-26T03:41:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1999" started-at="2019-01-26T03:41:32Z" finished-at="2019-01-26T03:41:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:34Z" finished-at="2019-01-26T03:41:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getHBo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:34Z" finished-at="2019-01-26T03:41:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getHBo()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getHBo" duration-ms="1120" started-at="2019-01-26T03:41:34Z" finished-at="2019-01-26T03:41:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHBo -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="161" started-at="2019-01-26T03:41:35Z" finished-at="2019-01-26T03:41:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getHBo status=SUCCESS method=TestMainPage.getHBo()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:36Z" finished-at="2019-01-26T03:41:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1875" started-at="2019-01-26T03:41:36Z" finished-at="2019-01-26T03:41:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:37Z" finished-at="2019-01-26T03:41:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getHboInspire()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:37Z" finished-at="2019-01-26T03:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getHboInspire()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getHboInspire" duration-ms="1133" started-at="2019-01-26T03:41:37Z" finished-at="2019-01-26T03:41:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHboInspire -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="111" started-at="2019-01-26T03:41:39Z" finished-at="2019-01-26T03:41:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getHboInspire status=SUCCESS method=TestMainPage.getHboInspire()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1952" started-at="2019-01-26T03:41:39Z" finished-at="2019-01-26T03:41:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:39Z" finished-at="2019-01-26T03:41:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:41Z" finished-at="2019-01-26T03:41:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getHelpForHbo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:41Z" finished-at="2019-01-26T03:41:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getHelpForHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getHelpForHbo" duration-ms="921" started-at="2019-01-26T03:41:41Z" finished-at="2019-01-26T03:41:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHelpForHbo -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="121" started-at="2019-01-26T03:41:42Z" finished-at="2019-01-26T03:41:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getHelpForHbo status=SUCCESS method=TestMainPage.getHelpForHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:42Z" finished-at="2019-01-26T03:41:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2000" started-at="2019-01-26T03:41:42Z" finished-at="2019-01-26T03:41:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:44Z" finished-at="2019-01-26T03:41:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:44Z" finished-at="2019-01-26T03:41:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getInstogram()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInstogram()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInstogram" duration-ms="1540" started-at="2019-01-26T03:41:44Z" finished-at="2019-01-26T03:41:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInstogram -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="121" started-at="2019-01-26T03:41:45Z" finished-at="2019-01-26T03:41:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getInstogram status=SUCCESS method=TestMainPage.getInstogram()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:45Z" finished-at="2019-01-26T03:41:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1964" started-at="2019-01-26T03:41:45Z" finished-at="2019-01-26T03:41:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:47Z" finished-at="2019-01-26T03:41:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getPrivatePolicy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:47Z" finished-at="2019-01-26T03:41:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getPrivatePolicy()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getPrivatePolicy" duration-ms="635" started-at="2019-01-26T03:41:47Z" finished-at="2019-01-26T03:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrivatePolicy -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="162" started-at="2019-01-26T03:41:48Z" finished-at="2019-01-26T03:41:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPrivatePolicy status=SUCCESS method=TestMainPage.getPrivatePolicy()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:48Z" finished-at="2019-01-26T03:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1912" started-at="2019-01-26T03:41:48Z" finished-at="2019-01-26T03:41:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:50Z" finished-at="2019-01-26T03:41:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getShopping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:50Z" finished-at="2019-01-26T03:41:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getShopping()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getShopping" duration-ms="437" started-at="2019-01-26T03:41:50Z" finished-at="2019-01-26T03:41:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getShopping -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="114" started-at="2019-01-26T03:41:50Z" finished-at="2019-01-26T03:41:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getShopping status=SUCCESS method=TestMainPage.getShopping()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:51Z" finished-at="2019-01-26T03:41:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1889" started-at="2019-01-26T03:41:51Z" finished-at="2019-01-26T03:41:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:52Z" finished-at="2019-01-26T03:41:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getSportsUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:52Z" finished-at="2019-01-26T03:41:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getSportsUrl()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getSportsUrl" duration-ms="1655" started-at="2019-01-26T03:41:52Z" finished-at="2019-01-26T03:41:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSportsUrl -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="110" started-at="2019-01-26T03:41:54Z" finished-at="2019-01-26T03:41:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSportsUrl status=SUCCESS method=TestMainPage.getSportsUrl()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:54Z" finished-at="2019-01-26T03:41:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1894" started-at="2019-01-26T03:41:54Z" finished-at="2019-01-26T03:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:56Z" finished-at="2019-01-26T03:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getTermsInHbo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:56Z" finished-at="2019-01-26T03:41:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getTermsInHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getTermsInHbo" duration-ms="623" started-at="2019-01-26T03:41:56Z" finished-at="2019-01-26T03:41:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTermsInHbo -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="109" started-at="2019-01-26T03:41:57Z" finished-at="2019-01-26T03:41:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTermsInHbo status=SUCCESS method=TestMainPage.getTermsInHbo()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:57Z" finished-at="2019-01-26T03:41:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1917" started-at="2019-01-26T03:41:57Z" finished-at="2019-01-26T03:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:41:59Z" finished-at="2019-01-26T03:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getText() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:41:59Z" finished-at="2019-01-26T03:41:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getText()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getText" duration-ms="1852" started-at="2019-01-26T03:41:59Z" finished-at="2019-01-26T03:42:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getText -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="110" started-at="2019-01-26T03:42:01Z" finished-at="2019-01-26T03:42:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getText status=SUCCESS method=TestMainPage.getText()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:01Z" finished-at="2019-01-26T03:42:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1982" started-at="2019-01-26T03:42:01Z" finished-at="2019-01-26T03:42:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getTitle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getTitle()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getTitle" duration-ms="24" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="107" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle status=SUCCESS method=TestMainPage.getTitle()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1924" started-at="2019-01-26T03:42:03Z" finished-at="2019-01-26T03:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:05Z" finished-at="2019-01-26T03:42:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:05Z" finished-at="2019-01-26T03:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getTwitter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getTwitter()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getTwitter" duration-ms="1171" started-at="2019-01-26T03:42:05Z" finished-at="2019-01-26T03:42:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTwitter -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="117" started-at="2019-01-26T03:42:06Z" finished-at="2019-01-26T03:42:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTwitter status=SUCCESS method=TestMainPage.getTwitter()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1977" started-at="2019-01-26T03:42:06Z" finished-at="2019-01-26T03:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:06Z" finished-at="2019-01-26T03:42:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:08Z" finished-at="2019-01-26T03:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getWaytoGet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:08Z" finished-at="2019-01-26T03:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getWaytoGet()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getWaytoGet" duration-ms="1211" started-at="2019-01-26T03:42:08Z" finished-at="2019-01-26T03:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWaytoGet -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="109" started-at="2019-01-26T03:42:09Z" finished-at="2019-01-26T03:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWaytoGet status=SUCCESS method=TestMainPage.getWaytoGet()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:09Z" finished-at="2019-01-26T03:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1821" started-at="2019-01-26T03:42:09Z" finished-at="2019-01-26T03:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:11Z" finished-at="2019-01-26T03:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.getWebElementList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:11Z" finished-at="2019-01-26T03:42:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="getWebElementList()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getWebElementList" duration-ms="758" started-at="2019-01-26T03:42:11Z" finished-at="2019-01-26T03:42:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWebElementList -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="107" started-at="2019-01-26T03:42:12Z" finished-at="2019-01-26T03:42:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWebElementList status=SUCCESS method=TestMainPage.getWebElementList()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:12Z" finished-at="2019-01-26T03:42:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1885" started-at="2019-01-26T03:42:12Z" finished-at="2019-01-26T03:42:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="kids()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="kids" duration-ms="658" started-at="2019-01-26T03:42:14Z" finished-at="2019-01-26T03:42:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kids -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:14Z" finished-at="2019-01-26T03:42:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:14Z" finished-at="2019-01-26T03:42:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.kids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="182" started-at="2019-01-26T03:42:15Z" finished-at="2019-01-26T03:42:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=kids status=SUCCESS method=TestMainPage.kids()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:15Z" finished-at="2019-01-26T03:42:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1800" started-at="2019-01-26T03:42:15Z" finished-at="2019-01-26T03:42:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.logoTab() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="logoTab()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="logoTab" duration-ms="44" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTab -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="96" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoTab status=SUCCESS method=TestMainPage.logoTab()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="1805" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:17Z" finished-at="2019-01-26T03:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:18Z" finished-at="2019-01-26T03:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.playVideo() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="playVideo()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="playVideo" duration-ms="10067" started-at="2019-01-26T03:42:19Z" finished-at="2019-01-26T03:42:29Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"/html/body/main[@class='wrapperMain']/div[6]/div/div//div[@class='modules/cards/BasicCard--tabletContainer']/section[@class='modules/PromotionalCard--carouselContainer']//div[@class='components/Carousel--container']/div[1]/div//div[@class='components/CardText--body']/a[@href='/movies/brexit']/div[@class='components/CardText--title']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53986}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 0267a7c43c2e6ebd345f224607709793
*** Element info: {Using=xpath, value=/html/body/main[@class='wrapperMain']/div[6]/div/div//div[@class='modules/cards/BasicCard--tabletContainer']/section[@class='modules/PromotionalCard--carouselContainer']//div[@class='components/Carousel--container']/div[1]/div//div[@class='components/CardText--body']/a[@href='/movies/brexit']/div[@class='components/CardText--title']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/html/body/main[@class='wrapperMain']/div[6]/div/div//div[@class='modules/cards/BasicCard--tabletContainer']/section[@class='modules/PromotionalCard--carouselContainer']//div[@class='components/Carousel--container']/div[1]/div//div[@class='components/CardText--body']/a[@href='/movies/brexit']/div[@class='components/CardText--title']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:53986}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 0267a7c43c2e6ebd345f224607709793
*** Element info: {Using=xpath, value=/html/body/main[@class='wrapperMain']/div[6]/div/div//div[@class='modules/cards/BasicCard--tabletContainer']/section[@class='modules/PromotionalCard--carouselContainer']//div[@class='components/Carousel--container']/div[1]/div//div[@class='components/CardText--body']/a[@href='/movies/brexit']/div[@class='components/CardText--title']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.click(Unknown Source)
at homePage.MainPage.setPlayVideo(MainPage.java:193)
at testHomePage.TestMainPage.playVideo(TestMainPage.java:110)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playVideo -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:19Z" finished-at="2019-01-26T03:42:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="685" started-at="2019-01-26T03:42:29Z" finished-at="2019-01-26T03:42:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=playVideo status=FAILURE method=TestMainPage.playVideo()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2084" started-at="2019-01-26T03:42:29Z" finished-at="2019-01-26T03:42:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:29Z" finished-at="2019-01-26T03:42:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:31Z" finished-at="2019-01-26T03:42:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.schedule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="schedule()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="schedule" duration-ms="624" started-at="2019-01-26T03:42:31Z" finished-at="2019-01-26T03:42:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schedule -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:31Z" finished-at="2019-01-26T03:42:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="120" started-at="2019-01-26T03:42:32Z" finished-at="2019-01-26T03:42:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=schedule status=SUCCESS method=TestMainPage.schedule()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2023" started-at="2019-01-26T03:42:32Z" finished-at="2019-01-26T03:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:32Z" finished-at="2019-01-26T03:42:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:34Z" finished-at="2019-01-26T03:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.searchBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="searchBox()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="searchBox" duration-ms="10068" started-at="2019-01-26T03:42:34Z" finished-at="2019-01-26T03:42:44Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//input[@ type='text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54131}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 2d61304e253b16c7354bfc8f164ba54c
*** Element info: {Using=xpath, value=//input[@ type='text']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@ type='text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54131}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 2d61304e253b16c7354bfc8f164ba54c
*** Element info: {Using=xpath, value=//input[@ type='text']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.sendKeys(Unknown Source)
at homePage.MainPage.findSearchBx(MainPage.java:109)
at testHomePage.TestMainPage.searchBox(TestMainPage.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBox -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:34Z" finished-at="2019-01-26T03:42:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="673" started-at="2019-01-26T03:42:44Z" finished-at="2019-01-26T03:42:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBox status=FAILURE method=TestMainPage.searchBox()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2143" started-at="2019-01-26T03:42:45Z" finished-at="2019-01-26T03:42:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:45Z" finished-at="2019-01-26T03:42:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="searchIcon()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="searchIcon" duration-ms="703" started-at="2019-01-26T03:42:47Z" finished-at="2019-01-26T03:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchIcon -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:47Z" finished-at="2019-01-26T03:42:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.searchIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:47Z" finished-at="2019-01-26T03:42:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="110" started-at="2019-01-26T03:42:48Z" finished-at="2019-01-26T03:42:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchIcon status=SUCCESS method=TestMainPage.searchIcon()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="1" started-at="2019-01-26T03:42:48Z" finished-at="2019-01-26T03:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="2048" started-at="2019-01-26T03:42:48Z" finished-at="2019-01-26T03:42:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.hbo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:50Z" finished-at="2019-01-26T03:42:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePage.TestMainPage.showImage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:50Z" finished-at="2019-01-26T03:42:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="FAIL" signature="showImage()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="showImage" duration-ms="1850" started-at="2019-01-26T03:42:50Z" finished-at="2019-01-26T03:42:52Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at homePage.MainPage.imageVarification(MainPage.java:188)
at testHomePage.TestMainPage.showImage(TestMainPage.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showImage -->
        <test-method status="FAIL" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="20" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=showImage status=FAILURE method=TestMainPage.showImage()[pri:0, instance:testHomePage.TestMainPage@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54300}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 18878c4652d1668b9d88ec4fabcdb050]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54300}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 18878c4652d1668b9d88ec4fabcdb050
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:294)
at base.CommonAPI.captureScreenshot(CommonAPI.java:237)
at base.CommonAPI.afterEachTestMethod(CommonAPI.java:85)
at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="SKIP" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="SKIP" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="SKIP" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="setUp" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="getInformation()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="getInformation" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInformation -->
        <test-method status="SKIP" signature="cleanUP()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="cleanUP" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="SKIP" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="afterEachTestMethod" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="SKIP" signature="signIn()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="signIn" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54300}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 18878c4652d1668b9d88ec4fabcdb050]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Shahnazs-MBP.fios-router.home', ip: 'fe80:0:0:0:89e:27fe:12dd:8081%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_202-ea'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591059 (a3d9684d10d61a..., userDataDir: /var/folders/x8/60jw2y790m5...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:54300}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 18878c4652d1668b9d88ec4fabcdb050
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:294)
at base.CommonAPI.captureScreenshot(CommonAPI.java:237)
at base.CommonAPI.afterEachTestMethod(CommonAPI.java:85)
at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method status="SKIP" signature="generateReport()[pri:0, instance:testHomePage.TestMainPage@2f943d71]" name="generateReport" is-config="true" duration-ms="0" started-at="2019-01-26T03:42:52Z" finished-at="2019-01-26T03:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testHomePage.TestMainPage -->
    </test> <!-- Search -->
  </suite> <!-- HBO Automation Script -->
</testng-results>
